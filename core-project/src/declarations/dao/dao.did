type Proposal = 
 record {
   maxVotes: nat;
   minVotes: nat;
   open: bool;
   title: text;
   user: principal;
   votersList: List;
   votes: record {
            no: nat;
            yes: nat;
          };
 };
type List = 
 opt record {
       principal;
       List;
     };
type Id = nat;
type Backend = 
 service {
   get_all_proposals: () -> (vec record {
                                   Id;
                                   Proposal;
                                 }) query;
   get_proposal: (Id) -> (opt Proposal) query;
   id: () -> (principal);
   modiFied: (nat, nat, nat) -> (variant {
                                   Err: text;
                                   Ok: Proposal;
                                 });
   nameMbt: () -> (text);
   submit_proposal: (text) -> (variant {
                                 Err: text;
                                 Ok: Proposal;
                               });
   totalMbt: () -> (nat);
   vote: (Id, bool) -> (variant {
                          Err: text;
                          Ok: text;
                        });
   whoami: () -> (principal);
 };
service : () -> Backend
